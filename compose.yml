volumes:
  dynamodb-data:
    driver: local

networks:
  heimdall-network:
    external: false

services:
  # ---
  # Shared
  # ---
  dynamodb:
    container_name: dynamodb
    image: 'amazon/dynamodb-local:latest'
    restart: unless-stopped
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    volumes:
      - 'dynamodb-data:/home/dynamodblocal/data'
    networks:
      - heimdall-network
  api-gateway:
    container_name: api-gateway
    image: kong:3.8-ubuntu
    restart: unless-stopped
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    volumes:
      - './infra/kong:/opt/kong'
    ports:
      - '8000:8000'
      - '8001:8001'
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /opt/kong/kong.yml
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    command: kong start
    networks:
      - heimdall-network
    healthcheck:
      test: ['CMD', 'kong', 'healt']
      interval: 10s
      timeout: 10s
      retries: 10
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    volumes:
      - './infra/watchtower/:/config/'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/etc/localtime:/etc/localtime:ro'
    command: --interval 30
  # ---
  # Squads
  # ---
  squads-service:
    container_name: squads-service
    image: 10.43.102.250:3000/heimdall/squads-service:latest
    restart: unless-stopped
    environment:
      DYNAMODB_HOST: ${DYNAMODB_HOST}
      DYNAMODB_PORT: ${DYNAMODB_PORT}
      DYNAMODB_URL: ${DYNAMODB_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      APP_HOST: ${SQUAD_APP_HOST}
      APP_PORT: ${SQUAD_APP_PORT}
    depends_on:
      - dynamodb
    networks:
      - heimdall-network
